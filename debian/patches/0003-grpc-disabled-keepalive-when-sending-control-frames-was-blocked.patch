From: Maxim Dounin <mdounin@mdounin.ru>
Date: Mon, 3 Sep 2018 19:34:02 +0300
Subject: gRPC: disabled keepalive when sending control frames was blocked.

If sending request body was not completed (u->request_body_sent is not set),
the upstream keepalive module won't save such a connection.  However, it
is theoretically possible (though highly unlikely) that sending of some
control frames can be blocked after the request body was sent.  The
ctx->output_blocked flag introduced to disable keepalive in such cases.

--- a/src/http/modules/ngx_http_grpc_module.c
+++ b/src/http/modules/ngx_http_grpc_module.c
@@ -109,6 +109,7 @@ typedef struct {
 
     unsigned                   header_sent:1;
     unsigned                   output_closed:1;
+    unsigned                   output_blocked:1;
     unsigned                   parsing_headers:1;
     unsigned                   end_stream:1;
     unsigned                   done:1;
@@ -1073,6 +1074,7 @@ ngx_http_grpc_reinit_request(ngx_http_request_t *r)
     ctx->state = 0;
     ctx->header_sent = 0;
     ctx->output_closed = 0;
+    ctx->output_blocked = 0;
     ctx->parsing_headers = 0;
     ctx->end_stream = 0;
     ctx->done = 0;
@@ -1410,6 +1412,13 @@ ngx_http_grpc_body_output_filter(void *data, ngx_chain_t *in)
         rc = NGX_AGAIN;
     }
 
+    if (rc == NGX_AGAIN) {
+        ctx->output_blocked = 1;
+
+    } else {
+        ctx->output_blocked = 0;
+    }
+
     if (ctx->done) {
 
         /*
@@ -1424,6 +1433,7 @@ ngx_http_grpc_body_output_filter(void *data, ngx_chain_t *in)
         if (ctx->in == NULL
             && ctx->out == NULL
             && ctx->output_closed
+            && !ctx->output_blocked
             && ctx->state == ngx_http_grpc_st_start)
         {
             u->keepalive = 1;
@@ -1774,6 +1784,7 @@ ngx_http_grpc_process_header(ngx_http_request_t *r)
                     if (ctx->in == NULL
                         && ctx->out == NULL
                         && ctx->output_closed
+                        && !ctx->output_blocked
                         && b->last == b->pos)
                     {
                         u->keepalive = 1;
@@ -1876,6 +1887,7 @@ ngx_http_grpc_filter(void *data, ssize_t bytes)
 
                     if (ctx->in == NULL
                         && ctx->output_closed
+                        && !ctx->output_blocked
                         && ctx->state == ngx_http_grpc_st_start)
                     {
                         u->keepalive = 1;
